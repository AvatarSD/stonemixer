
stonemixer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000238  000002cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000238  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  000002cc  2**0
                  ALLOC
  3 .stab         0000066c  00000000  00000000  000002cc  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000d14  00000000  00000000  00000938  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  0000164c  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	33 c0       	rjmp	.+102    	; 0x68 <__ctors_end>
   2:	00 00       	nop
   4:	62 c0       	rjmp	.+196    	; 0xca <__vector_1>
   6:	00 00       	nop
   8:	9c c0       	rjmp	.+312    	; 0x142 <__vector_2>
   a:	00 00       	nop
   c:	3d c0       	rjmp	.+122    	; 0x88 <__bad_interrupt>
   e:	00 00       	nop
  10:	3b c0       	rjmp	.+118    	; 0x88 <__bad_interrupt>
  12:	00 00       	nop
  14:	39 c0       	rjmp	.+114    	; 0x88 <__bad_interrupt>
  16:	00 00       	nop
  18:	37 c0       	rjmp	.+110    	; 0x88 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	35 c0       	rjmp	.+106    	; 0x88 <__bad_interrupt>
  1e:	00 00       	nop
  20:	33 c0       	rjmp	.+102    	; 0x88 <__bad_interrupt>
  22:	00 00       	nop
  24:	31 c0       	rjmp	.+98     	; 0x88 <__bad_interrupt>
  26:	00 00       	nop
  28:	3e c0       	rjmp	.+124    	; 0xa6 <__vector_10>
  2a:	00 00       	nop
  2c:	2d c0       	rjmp	.+90     	; 0x88 <__bad_interrupt>
  2e:	00 00       	nop
  30:	2b c0       	rjmp	.+86     	; 0x88 <__bad_interrupt>
  32:	00 00       	nop
  34:	29 c0       	rjmp	.+82     	; 0x88 <__bad_interrupt>
  36:	00 00       	nop
  38:	27 c0       	rjmp	.+78     	; 0x88 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	25 c0       	rjmp	.+74     	; 0x88 <__bad_interrupt>
  3e:	00 00       	nop
  40:	23 c0       	rjmp	.+70     	; 0x88 <__bad_interrupt>
  42:	00 00       	nop
  44:	21 c0       	rjmp	.+66     	; 0x88 <__bad_interrupt>
  46:	00 00       	nop
  48:	1f c0       	rjmp	.+62     	; 0x88 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	1d c0       	rjmp	.+58     	; 0x88 <__bad_interrupt>
  4e:	00 00       	nop
  50:	1b c0       	rjmp	.+54     	; 0x88 <__bad_interrupt>
  52:	00 00       	nop
  54:	19 c0       	rjmp	.+50     	; 0x88 <__bad_interrupt>
  56:	00 00       	nop
  58:	17 c0       	rjmp	.+46     	; 0x88 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	15 c0       	rjmp	.+42     	; 0x88 <__bad_interrupt>
  5e:	00 00       	nop
  60:	13 c0       	rjmp	.+38     	; 0x88 <__bad_interrupt>
  62:	00 00       	nop
  64:	11 c0       	rjmp	.+34     	; 0x88 <__bad_interrupt>
	...

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a2 30       	cpi	r26, 0x02	; 2
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	d1 d0       	rcall	.+418    	; 0x228 <main>
  86:	d6 c0       	rjmp	.+428    	; 0x234 <_exit>

00000088 <__bad_interrupt>:
  88:	bb cf       	rjmp	.-138    	; 0x0 <__vectors>

0000008a <_Z4setRv>:
{

}

void setR()
{
  8a:	cf 93       	push	r28
  8c:	df 93       	push	r29
  8e:	cd b7       	in	r28, 0x3d	; 61
  90:	de b7       	in	r29, 0x3e	; 62

}
  92:	df 91       	pop	r29
  94:	cf 91       	pop	r28
  96:	08 95       	ret

00000098 <_Z4setLv>:

void setL()
{
  98:	cf 93       	push	r28
  9a:	df 93       	push	r29
  9c:	cd b7       	in	r28, 0x3d	; 61
  9e:	de b7       	in	r29, 0x3e	; 62

}
  a0:	df 91       	pop	r29
  a2:	cf 91       	pop	r28
  a4:	08 95       	ret

000000a6 <__vector_10>:
{

}

ISR(TIMER1_CAPT_vect)
{
  a6:	1f 92       	push	r1
  a8:	0f 92       	push	r0
  aa:	00 90 5f 00 	lds	r0, 0x005F
  ae:	0f 92       	push	r0
  b0:	11 24       	eor	r1, r1
  b2:	cf 93       	push	r28
  b4:	df 93       	push	r29
  b6:	cd b7       	in	r28, 0x3d	; 61
  b8:	de b7       	in	r29, 0x3e	; 62

}
  ba:	df 91       	pop	r29
  bc:	cf 91       	pop	r28
  be:	0f 90       	pop	r0
  c0:	00 92 5f 00 	sts	0x005F, r0
  c4:	0f 90       	pop	r0
  c6:	1f 90       	pop	r1
  c8:	18 95       	reti

000000ca <__vector_1>:

uint16_t stepCounter = 0;
ISR(INT0_vect)
{
  ca:	1f 92       	push	r1
  cc:	0f 92       	push	r0
  ce:	00 90 5f 00 	lds	r0, 0x005F
  d2:	0f 92       	push	r0
  d4:	11 24       	eor	r1, r1
  d6:	2f 93       	push	r18
  d8:	3f 93       	push	r19
  da:	4f 93       	push	r20
  dc:	5f 93       	push	r21
  de:	6f 93       	push	r22
  e0:	7f 93       	push	r23
  e2:	8f 93       	push	r24
  e4:	9f 93       	push	r25
  e6:	af 93       	push	r26
  e8:	bf 93       	push	r27
  ea:	ef 93       	push	r30
  ec:	ff 93       	push	r31
  ee:	cf 93       	push	r28
  f0:	df 93       	push	r29
  f2:	cd b7       	in	r28, 0x3d	; 61
  f4:	de b7       	in	r29, 0x3e	; 62
	if (!INT1_PIN & _BV(INT1_NUM))
  f6:	89 e2       	ldi	r24, 0x29	; 41
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	fc 01       	movw	r30, r24
  fc:	80 81       	ld	r24, Z
  fe:	80 e0       	ldi	r24, 0x00	; 0
 100:	88 23       	and	r24, r24
 102:	51 f0       	breq	.+20     	; 0x118 <__vector_1+0x4e>
	{

		stepCounter++;
 104:	80 91 00 01 	lds	r24, 0x0100
 108:	90 91 01 01 	lds	r25, 0x0101
 10c:	01 96       	adiw	r24, 0x01	; 1
 10e:	90 93 01 01 	sts	0x0101, r25
 112:	80 93 00 01 	sts	0x0100, r24
 116:	01 c0       	rjmp	.+2      	; 0x11a <__vector_1+0x50>
	}
	else
		setR();
 118:	b8 df       	rcall	.-144    	; 0x8a <_Z4setRv>
 11a:	df 91       	pop	r29
}
 11c:	cf 91       	pop	r28
 11e:	ff 91       	pop	r31
 120:	ef 91       	pop	r30
 122:	bf 91       	pop	r27
 124:	af 91       	pop	r26
 126:	9f 91       	pop	r25
 128:	8f 91       	pop	r24
 12a:	7f 91       	pop	r23
 12c:	6f 91       	pop	r22
 12e:	5f 91       	pop	r21
 130:	4f 91       	pop	r20
 132:	3f 91       	pop	r19
 134:	2f 91       	pop	r18
 136:	0f 90       	pop	r0
 138:	00 92 5f 00 	sts	0x005F, r0
 13c:	0f 90       	pop	r0
 13e:	1f 90       	pop	r1
 140:	18 95       	reti

00000142 <__vector_2>:

ISR(INT1_vect)
{
 142:	1f 92       	push	r1
 144:	0f 92       	push	r0
 146:	00 90 5f 00 	lds	r0, 0x005F
 14a:	0f 92       	push	r0
 14c:	11 24       	eor	r1, r1
 14e:	2f 93       	push	r18
 150:	3f 93       	push	r19
 152:	4f 93       	push	r20
 154:	5f 93       	push	r21
 156:	6f 93       	push	r22
 158:	7f 93       	push	r23
 15a:	8f 93       	push	r24
 15c:	9f 93       	push	r25
 15e:	af 93       	push	r26
 160:	bf 93       	push	r27
 162:	ef 93       	push	r30
 164:	ff 93       	push	r31
 166:	cf 93       	push	r28
 168:	df 93       	push	r29
 16a:	cd b7       	in	r28, 0x3d	; 61
 16c:	de b7       	in	r29, 0x3e	; 62
	if (!INT0_PIN & _BV(INT0_NUM))
 16e:	89 e2       	ldi	r24, 0x29	; 41
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	fc 01       	movw	r30, r24
 174:	80 81       	ld	r24, Z
 176:	80 e0       	ldi	r24, 0x00	; 0
 178:	88 23       	and	r24, r24
 17a:	51 f0       	breq	.+20     	; 0x190 <__vector_2+0x4e>
		stepCounter++;
 17c:	80 91 00 01 	lds	r24, 0x0100
 180:	90 91 01 01 	lds	r25, 0x0101
 184:	01 96       	adiw	r24, 0x01	; 1
 186:	90 93 01 01 	sts	0x0101, r25
 18a:	80 93 00 01 	sts	0x0100, r24
 18e:	01 c0       	rjmp	.+2      	; 0x192 <__vector_2+0x50>
	else
		setL();
 190:	83 df       	rcall	.-250    	; 0x98 <_Z4setLv>
 192:	df 91       	pop	r29
}
 194:	cf 91       	pop	r28
 196:	ff 91       	pop	r31
 198:	ef 91       	pop	r30
 19a:	bf 91       	pop	r27
 19c:	af 91       	pop	r26
 19e:	9f 91       	pop	r25
 1a0:	8f 91       	pop	r24
 1a2:	7f 91       	pop	r23
 1a4:	6f 91       	pop	r22
 1a6:	5f 91       	pop	r21
 1a8:	4f 91       	pop	r20
 1aa:	3f 91       	pop	r19
 1ac:	2f 91       	pop	r18
 1ae:	0f 90       	pop	r0
 1b0:	00 92 5f 00 	sts	0x005F, r0
 1b4:	0f 90       	pop	r0
 1b6:	1f 90       	pop	r1
 1b8:	18 95       	reti

000001ba <_Z4initv>:

void init()
{
 1ba:	cf 93       	push	r28
 1bc:	df 93       	push	r29
 1be:	cd b7       	in	r28, 0x3d	; 61
 1c0:	de b7       	in	r29, 0x3e	; 62



	TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
 1c2:	80 e8       	ldi	r24, 0x80	; 128
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	fc 01       	movw	r30, r24
 1c8:	10 82       	st	Z, r1
	TCCR1B=(0<<ICNC1) | (0<<ICES1) | (1<<WGM13) | (1<<WGM12) | (1<<CS12) | (0<<CS11) | (0<<CS10);
 1ca:	81 e8       	ldi	r24, 0x81	; 129
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	2c e1       	ldi	r18, 0x1C	; 28
 1d0:	fc 01       	movw	r30, r24
 1d2:	20 83       	st	Z, r18
	TCNT1H=0x00;
 1d4:	85 e8       	ldi	r24, 0x85	; 133
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	fc 01       	movw	r30, r24
 1da:	10 82       	st	Z, r1
	TCNT1L=0x00;
 1dc:	84 e8       	ldi	r24, 0x84	; 132
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	fc 01       	movw	r30, r24
 1e2:	10 82       	st	Z, r1
	ICR1H=0xF4;
 1e4:	87 e8       	ldi	r24, 0x87	; 135
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	24 ef       	ldi	r18, 0xF4	; 244
 1ea:	fc 01       	movw	r30, r24
 1ec:	20 83       	st	Z, r18
	ICR1L=0x23;
 1ee:	86 e8       	ldi	r24, 0x86	; 134
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	23 e2       	ldi	r18, 0x23	; 35
 1f4:	fc 01       	movw	r30, r24
 1f6:	20 83       	st	Z, r18
	OCR1AH=0x00;
 1f8:	89 e8       	ldi	r24, 0x89	; 137
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	fc 01       	movw	r30, r24
 1fe:	10 82       	st	Z, r1
	OCR1AL=0x00;
 200:	88 e8       	ldi	r24, 0x88	; 136
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	fc 01       	movw	r30, r24
 206:	10 82       	st	Z, r1
	OCR1BH=0x00;
 208:	8b e8       	ldi	r24, 0x8B	; 139
 20a:	90 e0       	ldi	r25, 0x00	; 0
 20c:	fc 01       	movw	r30, r24
 20e:	10 82       	st	Z, r1
	OCR1BL=0x00;
 210:	8a e8       	ldi	r24, 0x8A	; 138
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	fc 01       	movw	r30, r24
 216:	10 82       	st	Z, r1

	// Timer/Counter 1 Interrupt(s) initialization
	TIMSK1=(1<<ICIE1) | (0<<OCIE1B) | (0<<OCIE1A) | (0<<TOIE1);
 218:	8f e6       	ldi	r24, 0x6F	; 111
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	20 e2       	ldi	r18, 0x20	; 32
 21e:	fc 01       	movw	r30, r24
 220:	20 83       	st	Z, r18


}
 222:	df 91       	pop	r29
 224:	cf 91       	pop	r28
 226:	08 95       	ret

00000228 <main>:

int main()
{
 228:	cf 93       	push	r28
 22a:	df 93       	push	r29
 22c:	cd b7       	in	r28, 0x3d	; 61
 22e:	de b7       	in	r29, 0x3e	; 62
	init();
 230:	c4 df       	rcall	.-120    	; 0x1ba <_Z4initv>
 232:	ff cf       	rjmp	.-2      	; 0x232 <main+0xa>

00000234 <_exit>:
	TIMSK1=(1<<ICIE1) | (0<<OCIE1B) | (0<<OCIE1A) | (0<<TOIE1);


}

int main()
 234:	f8 94       	cli

00000236 <__stop_program>:
 236:	ff cf       	rjmp	.-2      	; 0x236 <__stop_program>
